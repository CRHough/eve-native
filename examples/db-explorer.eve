# DB Explorer

## Root

~~~ eve
commit
  [#ui/row #db-explorer/root | children:
    [#ui/row #db-explorer/query-box | children:
      [#ui/token-completer #db-explorer/query placeholder: "search..." | completion-pattern: [#db-explorer/pattern]]
      [#ui/button #db-explorer/query-button icon: "ios-search-strong"]]
    [#ui/row #db-explorer/card-list]]
end
~~~

Draw each matching record as a record symbol.
~~~ eve
search
  [#db-explorer/root record]
  card-list = [#db-explorer/card-list]
bind
  card-list.children += [#db-explorer/record-symbol record]
end
~~~

If no records are specified, show any record.
~~~ eve
search
  not([#db-explorer/completion-record])
  root = [#db-explorer/root]
  record = if r = [#pet] then r
  if r = [#person] then r
  if r = [#company] then r
bind
  root.record += record
end
~~~


// ~~~ eve
// search
//   lookup[entity: record]
//   not(record = [#record-card/card])
//   root = [#db-explorer/root]

//   not(root.record)
// bind
//   card-list.children += [#record-card/card #db-explorer/card record]
// end
// ~~~

## Record Symbol

~~~ eve
search
  symbol = [#db-explorer/record-symbol record]
bind
  symbol <- [#html/div record | children:
  [#ui/text sort: 1 text: "â¬¢"]]
end
~~~

If a record symbol is open, inject its card.
~~~ eve
search
  symbol = [#db-explorer/record-symbol record]
  root = [#db-explorer/root open: record]
bind
  symbol.children +=
  [#record-card/card #db-explorer/card record sort: 2]
end
~~~


Clicking a record symbol opens its card.
~~~ eve
search
  [#html/event/click element: [#db-explorer/record-symbol record]]
  root = [#db-explorer/root]
commit
  // root.open += record // @FIXME: Why doesn't this work if we do + and -
  root.open := record
end
~~~



## Record Card

Clicking a record link opens it in a card.
~~~ eve
search
  e = [#html/event/click element: [#record-card/record value]]
  container = [#db-explorer/card-list]
  count = gather/count[for:container.children]

commit
  container.children += [#record-card/card #db-explorer/card record: value]
end
~~~

Add a control for deleting the card.
~~~ eve
search
  controls = [#record-card/controls card]

bind
  controls.children += [#ui/button #flat #db-explorer/close-card sort: 99 icon: "close-round" card]
end
~~~

~~~ eve
search
  [#html/event/click element: [#db-explorer/close-card card: [record]]]
  root = [#db-explorer/root]
commit
  // root.open -= record // @FIXME Why doesn't this work if we do + and -
  // [#html/div text: "CLOSED {{record}}"]
  root.open := none
end
~~~


## Search

### Completions

Add tag completions to queries with no existing filters.
~~~ eve
search
  query = [#db-explorer/query]
  not(string/contains[text: query.value substring: " "])
  [tag]
bind
  query.completion += [value: tag text: "#{{tag}}"]
end
~~~

Add attribute completions to queries with no existing filters.
~~~ eve
search
  query = [#db-explorer/query]
  not(string/contains[text: query.value substring: " "])
  lookup[attribute]
bind
  query.completion += [value: attribute text: attribute]
end
~~~

Add tags that match possible completions.
~~~ eve
search
  query = [#db-explorer/query]
  [#db-explorer/completion-record record: [tag]]
bind
  query.completion += [value: tag text: "#{{tag}}"]
end
~~~

Add tags that match possible completions.
~~~ eve
search
  query = [#db-explorer/query]
  [#db-explorer/completion-record record]
  lookup[entity: record attribute]
bind
  query.completion += [value: attribute text: attribute]
end
~~~


### Token Parsing

If multiple tokens exist, assume all but the last are fully formed tags or attributes to filter upon.
~~~ eve
search
  query = [#db-explorer/query completion-pattern value]
  (token, ix) = eve-internal/string/split-reverse[text: value by: " "]
  ix != 1

bind
  [#db-explorer/tokens-to-pattern pattern: completion-pattern token]
end
~~~

`#db-explorer/tokens-to-pattern` attaches AVs to the records attribute for each token.

If the token starts with `#`, it's a tag.
~~~ eve
search
  [#db-explorer/tokens-to-pattern pattern token]
  1 = string/index-of[text: token substring: "#"]
  value = string/substring[text: token from: 2 to: 0]
bind
  pattern.attribute += [attribute: "tag" value]
end
~~~

If the token doesn't start with `#`, it's an attribute.
~~~ eve
search
  [#db-explorer/tokens-to-pattern pattern token]
  not(1 = string/index-of[text: token substring: "#"])
  token != ""
bind
  pattern.attribute += [attribute: token]
end
~~~

### Completer Generation

Find records that match the current completer pattern.
When the completion pattern has at least one attribute, create a completer block.
~~~ eve
search
  [#db-explorer/query completion-pattern]
  completion-pattern.attribute
bind
  output-var = [#eve/compiler/variable name: "completion" completion-pattern]
  record-var = [#eve/compiler/variable name: "record" completion-pattern]
  [#eve/compiler/block #db-explorer/completer type: "bind" | record-var constraint:
    [#eve/compiler/gen-id entity: output-var | attribute: ("tag" "record")]
    [#eve/compiler/output entity: output-var attribute: "tag" value: "db-explorer/completion-record"]
    [#eve/compiler/output entity: output-var attribute: "record" value: record-var]]
end
~~~

Fully formed AVs translate into eAV scans.
~~~ eve
search
  [#db-explorer/query completion-pattern: [attribute: [attribute value]]]
  block = [#db-explorer/completer record-var]
bind
  block.constraint += [#eve/compiler/scan entity: record-var attribute value]
end
~~~

AVs with only an A translate into eAv scans.
~~~ eve
search
  [#db-explorer/query completion-pattern]
  completion-pattern = [attribute]
  not(attribute.value)
  block = [#db-explorer/completer record-var]
bind
  value-var = [#eve/compiler/variable completion-pattern attribute]
  block.constraint += [#eve/compiler/scan entity: record-var attribute: attribute.attribute value: value-var]
end
~~~

When the search button is clicked, parse the current search string into a search block.
~~~ eve
search
  [#html/event/click element: [#db-explorer/query-button]]
  query = [#db-explorer/query]
commit
  [#ui/text text: "hai '{{query.value}}'"]
end
~~~


## Test

~~~ eve
commit
  dubdub = [#person #employee #male text: "wump" sort: 7 name: "dubdub" blarg: "crab" salary: 96 | company: kodowa friend: jubalyn]
  jubalyn = [#person #female name: "jubalyn" weight: 13 age: 91 coolness: 6 | friend: dubdub]
  kodowa = [#company #startup name: "kodowa" ceo: "chris" man-of-distinction: "josh" | employees: (dubdub, "josh", "chris", "corey", "rob")]
  [#pet #cat name: "blort" age: 13 | owner: dubdub]
  [#pet #dog name: "steve" age: 3 | owner: dubdub]
end
~~~

# DEBUG

~~~ eve
// search
//   root = [#db-explorer/root]
//   record = [#pet]
// commit
//   root.record += record
// end
~~~


~~~ eve
// search
//   [#db-explorer/query completion-pattern]
//   root = [#db-explorer/root]
// bind
//   root.record += completion-pattern
// end
~~~

~~~ eve
search
  [#db-explorer/completion-record record]
  root = [#db-explorer/root]
bind
  root.record += record
end
~~~


~~~ eve
search
  block = [#db-explorer/completer]
  root = [#db-explorer/root]
bind
  root.record += block
end
~~~

~~~ eve
search
  [#db-explorer/completion-record record]
bind
  [#html/div text: record]
end
~~~




~~~ eve
commit
  [#html/style text: "
    .db-explorer-root { max-width: 900px; }
    .db-explorer-card-list { flex-wrap: wrap; }

    .db-explorer-query-box { align-items: center; }

    .db-explorer-record-symbol { width: 30px height: 30px; text-align: center; margin: 20px; }
"]
end
~~~
